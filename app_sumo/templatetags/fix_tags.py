from django import template
from django.template.defaultfilters import stringfilter
import re

#年齢算出
#https://python.atelierkobato.com/age/
#from datetime import date
#from dateutil.relativedelta import relativedelta

register = template.Library() # Djangoのテンプレートタグライブラリ

# カスタムフィルタとして登録する
@register.filter
@stringfilter # 文字列に自動変換できるデコレータ
def get_first4char(str):
    return str[0:4]

@register.filter
@stringfilter
def get_5_11char(str):
    return str[5:5]

#半角数字を全角に変換
@register.filter
@stringfilter
def intToZen(i):
     HAN2ZEN = str.maketrans({"0":"０", "1":"１", "2":"２", "3":"３", "4":"４", "5":"５", "6":"６", "7":"７", "8":"８", "9":"９", ".":"．"})
     return str(i).translate(HAN2ZEN)

#半角数字を連数字に変換
@register.filter
@stringfilter
def hanren(i):
    replacements = {'10':'', '11':'', '12':'', '13':'', '14':'', '15':'', '16':'', '17':'', '18':'', '19':'','20':'', '21':'', '22':'', '23':'', '24':'', '25':'', '26':'', '27':'', '28':'', '29':'','30':'', '31':'', '32':'', '33':'', '34':'', '35':'', '36':'', '37':'', '38':'', '39':'','40':'', '41':'', '42':'', '43':'', '44':'', '45':'', '46':'', '47':'', '48':'', '49':'','50':'', '51':'', '52':'', '53':'', '54':'', '55':'', '56':'', '57':'', '58':'', '59':'','60':'', '61':'', '62':'', '63':'', '64':'', '65':'', '66':'', '67':'', '68':'', '69':'','70':'', '71':'', '72':'', '73':'', '74':'', '75':'', '76':'', '77':'', '78':'', '79':'','80':'', '81':'', '82':'', '83':'', '84':'', '85':'', '86':'', '87':'', '88':'', '89':'','90':'', '91':'', '92':'', '93':'', '94':'', '95':'', '96':'', '97':'', '98':'', '99':'','100':'', '101':'', '102':'', '103':'', '104':'', '105':'', '106':'', '107':'', '108':'', '109':'','110':'', '111':'', '112':'', '113':'', '114':'', '115':'', '116':'', '117':'', '118':'', '119':'','120':'', '121':'', '122':'', '123':'', '124':'', '125':'', '126':'', '127':'', '128':'', '129':'','130':'', '131':'', '132':'', '133':'', '134':'', '135':'', '136':'', '137':'', '138':'', '139':'','140':'', '141':'', '142':'', '143':'', '144':'', '145':'', '146':'', '147':'', '148':'', '149':'','0':'０', '1':'１', '2':'２', '3':'３', '4':'４', '5':'５', '6':'６', '7':'７', '8':'８', '9':'９'}
    return re.sub('({})'.format('|'.join(map(re.escape, replacements.keys()))), lambda m: replacements[m.group()], i)

#半角数字を丸数字に変換　　番付の奪金星などで使用
@register.filter
@stringfilter
def hanmaru(i):
    replacements = {'10':'⑩','11':'⑪','12':'⑫','13':'⑬','14':'⑭','15':'⑮','16':'⑯','17':'⑰','18':'⑱','19':'⑲','20':'⑳','21':'','22':'','23':'','24':'','25':'','26':'','27':'','28':'','29':'','30':'','31':'','32':'','33':'','34':'','35':'','36':'','37':'','38':'','39':'','40':'','41':'','42':'','43':'','44':'','45':'','46':'','47':'','48':'','49':'','50':'','51':'','52':'','53':'','54':'','55':'','56':'','57':'','58':'','59':'','60':'','61':'','62':'','63':'','64':'','65':'','66':'','67':'','68':'','69':'','70':'','71':'','72':'','73':'','74':'','75':'','76':'','77':'','78':'','79':'','80':'','81':'','82':'','83':'','84':'','85':'','86':'','87':'','88':'','89':'','90':'','91':'','92':'','93':'','94':'','95':'','96':'','97':'','98':'','99':'','1':'①','2':'②','3':'③','4':'④','5':'⑤','6':'⑥','7':'⑦','8':'⑧','9':'⑨'}

    return re.sub('({})'.format('|'.join(map(re.escape, replacements.keys()))), lambda m: replacements[m.group()], i)

#半角数字を白抜き数字に変換　　番付の与金星などで使用
@register.filter
@stringfilter
def hanshiromaru(i):
    replacements = {'10':'❿', '11':'', '12':'', '13':'', '14':'', '15':'', '16':'', '17':'', '18':'', '19':'','20':'', '21':'', '22':'', '23':'', '24':'', '25':'', '26':'', '27':'', '28':'', '29':'','30':'', '31':'', '32':'', '33':'', '34':'', '35':'', '36':'', '37':'', '38':'', '39':'','40':'', '41':'', '42':'', '43':'', '44':'', '45':'', '46':'', '47':'', '48':'', '49':'','50':'', '51':'', '52':'', '53':'', '54':'', '55':'', '56':'', '57':'', '58':'', '59':'','60':'', '61':'', '62':'', '63':'', '64':'', '65':'', '66':'', '67':'', '68':'', '69':'','70':'', '71':'', '72':'', '73':'', '74':'', '75':'', '76':'', '77':'', '78':'', '79':'','80':'', '81':'', '82':'', '83':'', '84':'', '85':'', '86':'', '87':'', '88':'', '89':'','90':'', '91':'', '92':'', '93':'', '94':'', '95':'', '96':'', '97':'', '98':'', '99':'','1':'１', '2':'２', '3':'３', '4':'４', '5':'５', '6':'６', '7':'７', '8':'８', '9':'９'}
    return re.sub('({})'.format('|'.join(map(re.escape, replacements.keys()))), lambda m: replacements[m.group()], i)

#西暦4桁を連数字２つに変換　　番付の柱行などで使用
@register.filter
@stringfilter
def hanyear2ren(i):
    replacements = {'2020':'', '2021':'', '2022':'', '2023':'', '2024':'', '2025':'', '2026':'', '2027':'', '2028':'', '2029':'','2030':'', '2031':'', '2032':'', '2033':'', '2034':'', '2035':'', '2036':'', '2037':'', '2038':'', '2039':'','2040':'', '2041':'', '2042':'', '2043':'', '2044':'', '2045':'', '2046':'', '2047':'', '2048':'', '2049':'','2050':''}
    return re.sub('({})'.format('|'.join(map(re.escape, replacements.keys()))), lambda m: replacements[m.group()], i)

#少数の整数部がゼロだったら除外
# 例）0.654 →　.654
@register.filter
@stringfilter
def remmove_integer0(str):
    return str.replace('0.','.')

#ゼロサプレス　　例）01→1
@register.filter
@stringfilter
def remove_0(i):
     remove_o = str.maketrans({"0":""})
     return str(i).translate(remove_o)

#ゼロを横棒に変換　　番付の生涯受賞成績などで使用
@register.filter
@stringfilter
def intZeroToyokobou(i):
     HAN0yokobou = str.maketrans({"0":"―"})
     return str(i).translate(HAN0yokobou)

#ゼロ埋め（6桁）
# 例）1234 →　001234  力士コード（PlayerId属性）どで使用
@register.filter
@stringfilter
def zeropadding6(i):
    return i.zfill(6)


#値のチェック　　　　　　●●●検証中●●●
#値がなかったら０を返す
@register.filter
@stringfilter
def nullcheck(i):
    if len(i) > 0:
        answer = 'あり'
    else:
        answer = 'なし'
    return str(answer)

